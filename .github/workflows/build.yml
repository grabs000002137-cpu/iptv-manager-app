name: Build IPTV Manager APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: ☕ Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: 🛠️ Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git zip unzip libssl-dev libffi-dev zlib1g-dev

    - name: 📱 Setup Android environment
      run: |
        # Variables
        ANDROID_SDK_ROOT=$HOME/android-sdk
        ANDROID_NDK_ROOT=$HOME/android-ndk
        
        # Créer les dossiers
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        
        # Android SDK
        cd $HOME
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mv cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
        rm commandlinetools-linux-9477386_latest.zip
        
        # Android NDK
        wget -q https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
        unzip -q android-ndk-r25c-linux.zip
        mv android-ndk-r25c $ANDROID_NDK_ROOT
        rm android-ndk-r25c-linux.zip
        
        # Variables d'environnement
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_ENV

    - name: 🔧 Install Android components
      run: |
        # Accepter les licences
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
        
        # Installer les outils
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.2"

    - name: 📦 Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.33
        pip install -r requirements.txt

    - name: 🏗️ Build APK
      run: |
        # Configurer l'environnement
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export ANDROID_NDK_ROOT=$HOME/android-ndk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools
        
        # Construire
        buildozer android debug

    - name: 📋 Find APK
      run: |
        echo "=== Recherche APK ==="
        find . -name "*.apk" -type f || echo "Aucune APK trouvée"
        
        # Vérifier buildozer
        if [ -d ".buildozer" ]; then
          echo "Contenu .buildozer:"
          find .buildozer -name "*.apk" -type f || echo "Pas d'APK dans .buildozer"
        fi

    - name: 📤 Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: IPTV-Manager-APK
        path: |
          bin/*.apk
          .buildozer/**/outputs/**/*.apk
          **/*.apk
        if-no-files-found: warn

    - name: 📊 Summary
      if: always()
      run: |
        APK_COUNT=$(find . -name "*.apk" -type f 2>/dev/null | wc -l)
        echo "### 📱 Build Result" >> $GITHUB_STEP_SUMMARY
        
        if [ $APK_COUNT -gt 0 ]; then
          echo "✅ **APK Created Successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📥 **Download:** Go to Actions tab → Click this build → Download 'IPTV-Manager-APK'" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **No APK generated**" >> $GITHUB_STEP_SUMMARY
          echo "Check build logs for errors." >> $GITHUB_STEP_SUMMARY
        fi

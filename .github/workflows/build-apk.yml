name: Build IPTV Manager APK2

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 60

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3

    - name: 🐍 Setup Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: ☕ Setup Java JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: 🛠️ Install System Dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          build-essential \
          git \
          zip \
          unzip \
          libssl-dev \
          libffi-dev \
          libbz2-dev \
          libreadline-dev \
          libsqlite3-dev \
          ccache

    - name: 📱 Setup Android SDK
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        mv cmdline-tools android-sdk/cmdline-tools/latest
        rm commandlinetools-linux-8512546_latest.zip
        
        wget -q https://dl.google.com/android/repository/android-ndk-r23c-linux.zip
        unzip -q android-ndk-r23c-linux.zip
        mv android-ndk-r23c android-ndk
        rm android-ndk-r23c-linux.zip
        
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$HOME/android-ndk" >> $GITHUB_ENV
        echo "NDK_API=21" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools" >> $GITHUB_ENV

    - name: 🔧 Install Android SDK Components
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-30" \
          "platforms;android-28" \
          "build-tools;30.0.3"

    - name: 📦 Install Buildozer
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install --no-cache-dir buildozer==1.4.0
        pip install --no-cache-dir cython==0.29.33

    - name: 🔧 Create Buildozer Spec
      run: |
        cat > buildozer.spec << 'EOF'
        [app]
        title = IPTV Manager
        package.name = iptvmanager
        package.domain = com.iptv.manager
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas,json,txt
        version = 1.0
        requirements = python3,kivy==2.1.0,requests,pyjnius,plyer,android
        
        [buildozer]
        log_level = 2
        
        [app:android]
        android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE,ACCESS_NETWORK_STATE,ACCESS_WIFI_STATE
        android.api = 30
        android.minapi = 21
        android.ndk_api = 21
        android.sdk = 30
        android.ndk = 23c
        android.accept_sdk_license = True
        android.arch = arm64-v8a
        android.gradle_dependencies = 
        android.add_src = 
        android.presplash_color = #000000
        EOF

    - name: 🏗️ Build APK with Buildozer
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export ANDROID_NDK_HOME=$HOME/android-ndk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        
        echo "=== Building APK ==="
        timeout 45m buildozer android debug || echo "Build completed or timed out"
        
        echo "=== Finding APK ==="
        find . -name "*.apk" -type f

    - name: 📋 Copy APK
      run: |
        APK_PATH=$(find . -name "*.apk" -type f | head -1)
        if [ -n "$APK_PATH" ]; then
          echo "APK Found: $APK_PATH"
          cp "$APK_PATH" "IPTV-Manager-v1.0.apk"
          echo "✅ APK copied to: IPTV-Manager-v1.0.apk"
          ls -lh "IPTV-Manager-v1.0.apk"
        else
          echo "❌ No APK found"
          echo "=== Searching in common locations ==="
          find . -name "*.apk" -o -name "*.aab" 2>/dev/null || echo "No APK/AAB files found"
        fi

    - name: 📤 Upload APK
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: IPTV-Manager-APK
        path: |
          *.apk
          bin/*.apk
          .buildozer/android/platform/build-**/outputs/**/*.apk
        if-no-files-found: warn
        retention-days: 30

    - name: 📊 Build Summary
      if: always()
      run: |
        echo "### 🎬 IPTV Manager APK Build Results" >> $GITHUB_STEP_SUMMARY
        
        APK_COUNT=$(find . -name "*.apk" -type f 2>/dev/null | wc -l)
        
        if [ $APK_COUNT -gt 0 ]; then
          echo "✅ **APK Successfully Generated!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **Your IPTV Manager APK is ready!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📥 **Download Instructions:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Click on the **Actions** tab" >> $GITHUB_STEP_SUMMARY
          echo "2. Click on this completed workflow run" >> $GITHUB_STEP_SUMMARY
          echo "3. Scroll down to **Artifacts**" >> $GITHUB_STEP_SUMMARY
          echo "4. Download **IPTV-Manager-APK**" >> $GITHUB_STEP_SUMMARY
          echo "5. Extract and install the APK on your Android device" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **No APK Generated**" >> $GITHUB_STEP_SUMMARY
          echo "Check the build logs for errors" >> $GITHUB_STEP_SUMMARY
        fi

name: Build IPTV Manager APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: ☕ Setup Java JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: 📱 Setup Android SDK
      run: |
        # Créer les répertoires Android SDK
        mkdir -p $HOME/.android
        mkdir -p $GITHUB_WORKSPACE/android-sdk/cmdline-tools
        
        # Télécharger les command line tools
        cd $GITHUB_WORKSPACE
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mv cmdline-tools android-sdk/cmdline-tools/latest
        
        # Configurer les variables d'environnement
        echo "ANDROID_HOME=$GITHUB_WORKSPACE/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$GITHUB_WORKSPACE/android-sdk" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$GITHUB_WORKSPACE/android-sdk/platform-tools" >> $GITHUB_PATH
    
    - name: 🔧 Install Android SDK Components
      run: |
        # Accepter toutes les licences
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
        # Installer les composants nécessaires
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-33" \
          "platforms;android-28" \
          "build-tools;33.0.2" \
          "build-tools;30.0.3"
    
    - name: 🛠️ Install Build Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libssl-dev \
          libffi-dev \
          libbz2-dev \
          libreadline-dev \
          libsqlite3-dev \
          libncurses5-dev \
          libncursesw5-dev \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev
    
    - name: 📦 Install Python Dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install buildozer cython==0.29.33
        pip install -r requirements.txt
    
    - name: 🔧 Configure Buildozer
      run: |
        # Créer le répertoire buildozer si nécessaire
        mkdir -p ~/.buildozer
        
        # Configurer buildozer pour utiliser notre SDK
        export ANDROID_HOME=$GITHUB_WORKSPACE/android-sdk
        export ANDROID_SDK_ROOT=$GITHUB_WORKSPACE/android-sdk
    
    - name: 🏗️ Build APK with Buildozer
      run: |
        # Configurer les variables d'environnement pour buildozer
        export ANDROID_HOME=$GITHUB_WORKSPACE/android-sdk
        export ANDROID_SDK_ROOT=$GITHUB_WORKSPACE/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        
        # Nettoyer et construire
        buildozer android clean
        buildozer android debug
    
    - name: 📋 List Generated Files
      run: |
        echo "=== Fichiers dans le répertoire courant ==="
        find . -name "*.apk" -type f 2>/dev/null || echo "Aucun APK trouvé dans le répertoire courant"
        
        echo "=== Fichiers dans bin/ ==="
        ls -la bin/ 2>/dev/null || echo "Pas de dossier bin/"
        
        echo "=== Recherche globale d'APK ==="
        find . -name "*.apk" -type f -exec ls -la {} \; 2>/dev/null || echo "Aucun APK trouvé"
    
    - name: 📤 Upload APK as Artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: IPTV-Manager-APK
        path: |
          bin/*.apk
          .buildozer/android/platform/build-*/outputs/apk/debug/*.apk
          **/*.apk
        if-no-files-found: warn
        retention-days: 30
    
    - name: 📊 Build Summary
      if: always()
      run: |
        echo "### 📱 Résultat de la construction APK" >> $GITHUB_STEP_SUMMARY
        if find . -name "*.apk" -type f | grep -q .; then
          echo "✅ **APK générée avec succès !**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📥 **Téléchargement** : Allez dans l'onglet 'Actions' et téléchargez l'artifact 'IPTV-Manager-APK'" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Fichiers APK trouvés :**" >> $GITHUB_STEP_SUMMARY
          find . -name "*.apk" -type f -exec echo "- {}" \; >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Erreur** : APK non générée" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Vérifiez les logs de construction pour plus de détails." >> $GITHUB_STEP_SUMMARY
        fi
